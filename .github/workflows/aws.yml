
name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1                  
  ECR_REPOSITORY: my_new_repo           
  #AWS_ACCESS_KEY_ID: AKIA2E76B54NCHSZFZSI
  #AWS_SECRET_ACCESS_KEY: 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

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: AKIA2E76B54NCHSZFZSI
        aws-secret-access-key: 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
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    - name: terraform 
      run: |
        terraform init
        terraform apply -auto-approve
      

   
